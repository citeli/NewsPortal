//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewsPortalMVC.NoticiaServiceWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NoticiaServiceWCF.INoticiaService")]
    public interface INoticiaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoticiaService/GravarNoticia", ReplyAction="http://tempuri.org/INoticiaService/GravarNoticiaResponse")]
        void GravarNoticia(Domain.Entities.Noticia noticia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INoticiaService/GravarNoticia", ReplyAction="http://tempuri.org/INoticiaService/GravarNoticiaResponse")]
        System.Threading.Tasks.Task GravarNoticiaAsync(Domain.Entities.Noticia noticia);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INoticiaServiceChannel : NewsPortalMVC.NoticiaServiceWCF.INoticiaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoticiaServiceClient : System.ServiceModel.ClientBase<NewsPortalMVC.NoticiaServiceWCF.INoticiaService>, NewsPortalMVC.NoticiaServiceWCF.INoticiaService {
        
        public NoticiaServiceClient() {
        }
        
        public NoticiaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NoticiaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoticiaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoticiaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GravarNoticia(Domain.Entities.Noticia noticia) {
            base.Channel.GravarNoticia(noticia);
        }
        
        public System.Threading.Tasks.Task GravarNoticiaAsync(Domain.Entities.Noticia noticia) {
            return base.Channel.GravarNoticiaAsync(noticia);
        }
    }
}
